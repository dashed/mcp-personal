name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y fd-find fzf ripgrep pandoc poppler-utils ffmpeg
        # Install ripgrep-all (rga) from GitHub releases
        wget https://github.com/phiresky/ripgrep-all/releases/latest/download/ripgrep_all-v0.10.6-x86_64-unknown-linux-musl.tar.gz
        tar -xzf ripgrep_all-v0.10.6-x86_64-unknown-linux-musl.tar.gz
        sudo cp ripgrep_all-v0.10.6-x86_64-unknown-linux-musl/rga /usr/local/bin/
        # Create symlink for fd (it's installed as fdfind on Ubuntu/Debian)
        sudo ln -s $(which fdfind) /usr/local/bin/fd || true

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install fd fzf ripgrep rga pandoc poppler ffmpeg

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install fd fzf ripgrep ripgrep-all

    - name: Verify system dependencies
      run: |
        echo "Checking fd:"
        fd --version || fdfind --version || echo "fd not found"
        echo "Checking fzf:"
        fzf --version || echo "fzf not found"
        echo "Checking ripgrep:"
        rg --version || echo "ripgrep not found"
        echo "Checking ripgrep-all:"
        rga --version || echo "ripgrep-all not found"
        echo "Checking pandoc:"
        pandoc --version || echo "pandoc not found"
        echo "Checking poppler (pdftotext):"
        pdftotext -v 2>&1 || echo "pdftotext not found"
        echo "Checking ffmpeg:"
        ffmpeg -version 2>&1 | head -1 || echo "ffmpeg not found"

    - name: Run CI checks
      run: make ci-local

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .pytest_cache/
          *.log